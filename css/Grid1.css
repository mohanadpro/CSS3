

*{
    margin: 0;
    box-sizing: border-box;
}

.grid-container{
    width: 100%; 
    display: grid;  

    /* 
    1. 2fr 1fr 1fr;
    it divides the width of the screen to 3 columns and the first one is twice the others
    2. 20% 20% 20% 20% 20%
    it divides the width of the screen to 5 columns and all of them are equal : 20%
    3. repeat(2,40%)
    it divides the width of the screen to 2 columns and all of them are equal :40%
    */
    grid-template-columns: 1fr 1fr 1fr 1fr;


    /*    
    1. grid-template-rows:200px 100px 150px
    it divide the screen to 3 rows and each one of them takes its own value
    2. repeat(4,200px)
    it divide the screen to 4 rows and each one of them takes 200px
    3. grid-auto-rows: minmax(200px,auto)
    it gives the fraction minimum value 200px and if the content becomes more it expands
    */
    grid-auto-rows: minmax(200px,auto);

    /* 
    makes a gap between the columns and rows
    grid-column-gap: 10px;
    grid-row-gap: 10px; 
    we can reduce them by grid-gap: rows-gap columns-gap
    */ 
    grid-gap: 50px 20px;


    overflow: auto;
 

}

.grid-container > .item{
    width: 100%;
    background-color: rgb(43, 40, 40);
    color: white;
    text-align: center;
    line-height: 30px;
    margin: 0 5px;
}

.nested-grid{
    display: grid;
    grid-template-columns: repeat(2,1fr);
    grid-gap: 10px;
}

.nested-grid p:first-of-type{
    background-color: rgb(35, 35, 105);
}

.nested-grid p:nth-of-type(2){
    background-color: red;
}
.nested-grid p:nth-of-type(3){
    background-color: rgb(51, 25, 146);
}
.nested-grid p:last-of-type{
    background-color: rgb(69, 121, 27);
}

.grid-container .item5{

    /* it tell the grid th let the class item5 to start from column 1 to the column 4 so it becomes bigger
    grid-column-start: 1;
    grid-column-end: 4;
    we can reduce it grid-column: start/end;
    */
    grid-column: 1/4;
}

.grid-container .item7{
    grid-column: 1/5;
}